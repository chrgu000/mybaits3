一.HTTP请求的过程
	1.域名解析
		浏览器解析自身DNS缓存->搜索系统DNS缓存->查找HOSTS
	2.发起TCP三次握手(建立TCP连接)
		客户端请求验证->服务端检查->客户端接受验证状态
	3.发起HTTP请求
		HTTP1.0:每次请求建立一个单独的连接
		HTTP1.1:一次连接可以处理多个请求,并且请求可以重叠进行
	4.服务端响应HTTP请求
	5.浏览器解析(期间加载js等资源)
	6.浏览器渲染界面
		
		
二.HTTP报文
	1.请求报文
		起始行:	包含请求的方法,URL和使用的协议.	例如:	GET /dgp HTTP/1.1
		头部信息:
			Accept: 告诉服务器能够接受的MIME类型. 例如: text/html,image/webp
			Accept-Encoding: 文件的压缩方式. 例如:gzip,deflate,sdch
			Accept-Lanauge: 语言信息. 例如:zh-CN,zh;q=0.8
			Connection: 告诉服务器支持keep-alive特性. 例如: keep-alive
			Cookie: 携带的数据.
			Host: 标识访问哪个主机.
			User-Agent: 用户代理
	2.MIME
		mime格式: 主类型/次类型
	3.状态码
		信息状态码: 100,101
		成功状态码: 200
		重定向状态码: 301(永久),302(临时),304(未修改,直接使用本地)
		路径错误: 404
		内部错误: 500
		代理服务器无法连接后端服务器: 502
		代理服务器连接到后端服务器后超时: 504
	4.回应报文
		起始行: 包含协议和状态. 例如: HTTP/1.1 200 OK
		头部信息:
			Connection: 使用keep-alive特性. 例如: keep-alive
			Content-Encoding: 文件的压缩方式. 例如: gzip
			Content-type: MIME类型. 例如: application/json
			Date: 时间
			Server: 使用的web服务器. 例如:Apache
			