1.iptables命令
	命令调用方式:iptables -t 表名 <-A/I/D/R> 规则链名 [规则号] <-i/o> 网卡名 -p 协议名 <-s 源IP/源子网> --sport 源端口 <-d 目标IP.目标子网> --dport 目标端口 -j 动作
	选项:
		-t 指定要操作的表
		-A 向规则链中添加
		-D 像规则链中删除
		-i 像规则链中插入
		-R 替换规则链中的条目
		-L 显示规则链中已有条目
		-F 清除规则链中已有条目
		-Z 清空规则链中的数据包计算器和字节数计算器
		-N 创建新的用户自定义规则链
		-P 定义规则链中的默认目标
		-p 指定协议类型
		-s 指定源ip地址
		-j<目标> 指定跳转的目标
		-i<网络接口> 指定数据包进入本机的网络接口
		-o<网络接口> 指定数据包要离开本机时的网络接口
		表名:
			raw 高级功能 (如:网址过滤)
			mangle 数据包修改(QOS),用于实现服务质量
			nat 地址转换,用于网关路由器
			fiter 包过滤,用于防火墙规则
		规则链名:
			INPUT 输入
			OUTPUT 输出
			PORWARD 转发
			PREROUTING 目标地址转换 (DNAT)
			POSTOUTING 源地址转换 (SNAT)
		动作:
			accept 接受数据包
			DROP 丢弃数据包
			REDIRECT 重定向,映射,透明代理
			SNAT 源地址转换
			DNAT 目标地址转换
			MASQUERADE IP伪装(NAT) 用于ADSL
			LOG 日志记录
		
		
		--------------------其它相关知识补充(转过来的)-----------------------------

iptables 是采用规则堆栈的方式来进行过滤，当一个封包进入网卡，会先检查 Prerouting，然后检查目的 IP 判断是否需要转送出去，接着就会跳到 INPUT 或 Forward 进行过滤，如果封包需转送处理则检查 Postrouting，如果是来自本机封包，则检查 OUTPUT 以及 Postrouting。过程中如果符合某条规则将会进行处理，处理动作除了 ACCEPT、REJECT、DROP、REDIRECT 和 MASQUERADE 以外，还多出 LOG、ULOG、DNAT、SNAT、MIRROR、QUEUE、RETURN、TOS、TTL、MARK 等，其中某些处理动作不会中断过滤程序，某些处理动作则会中断同一规则炼的过滤，并依照前述流程继续进行下一个规则炼的过滤（注意：这一点与 ipchains 不同），一直到堆栈中的规则检查完毕为止。透过这种机制所带来的好处是，我们可以进行复杂、多重的封包过滤，简单的说，iptables 可以进行纵横交错式的过滤（tables）而非炼状过滤（chains）。

　ACCEPT 将封包放行，进行完此处理动作后，将不再比对其它规则，直接跳往下一个规则炼（nat:postrouting）。
　REJECT 拦阻该封包，并传送封包通知对方，可以传送的封包有几个选择：ICMP port-unreachable、ICMP echo-reply 或是 tcp-reset（这个封包会要求对方关闭联机），进行完此处理动作后，将不再比对其它规则，直接 中断过滤程序。 范例如下： 
iptables -A FORWARD -p TCP --dport 22 -j REJECT --reject-with tcp-reset
　DROP 丢弃封包不予处理，进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。
　REDIRECT 将封包重新导向到另一个端口（PNAT），进行完此处理动作后，将 会继续比对其它规则。 这个功能可以用来实作通透式 porxy 或用来保护 web 服务器。例如：iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
　MASQUERADE 改写封包来源 IP 为防火墙 NIC IP，可以指定 port 对应的范围，进行完此处理动作后，直接跳往下一个规则炼（mangle:postrouting）。这个功能与 SNAT 略有不同，当进行 IP 伪装时，不需指定要伪装成哪个 IP，IP 会从网卡直接读取，当使用拨接连线时，IP 通常是由 ISP 公司的 DHCP 服务器指派的，这个时候 MASQUERADE 特别有用。范例如下：　 
　iptables -t nat -A POSTROUTING -p TCP -j MASQUERADE --to-ports 1024-31000
LOG 将封包相关讯息纪录在 /var/log 中，详细位置请查阅 /etc/syslog.conf 组态档，进行完此处理动作后，将会继续比对其它规则。例如： 
　　iptables -A INPUT -p tcp -j LOG --log-prefix "INPUT packets"
SNAT 改写封包来源 IP 为某特定 IP 或 IP 范围，可以指定 port 对应的范围，进行完此处理动作后，将直接跳往下一个规则炼（mangle:postrouting）。范例如下： 
　　iptables -t nat -A POSTROUTING -p tcp-o eth0 -j SNAT --to-source 194.236.50.155-194.236.50.160:1024-32000
DNAT 改写封包目的地 IP 为某特定 IP 或 IP 范围，可以指定 port 对应的范围，进行完此处理动作后，将会直接跳往下一个规则炼（filter:input 或 filter:forward）。范例如下： 
　　iptables -t nat -A PREROUTING -p tcp -d 15.45.23.67 --dport 80 -j DNAT --to-destination 192.168.1.1-192.168.1.10:80-100
MIRROR 镜射封包，也就是将来源 IP 与目的地 IP 对调后，将封包送回，进行完此处理动作后，将会中断过滤程序。
QUEUE 中断过滤程序，将封包放入队列，交给其它程序处理。透过自行开发的处理程序，可以进行其它应用，例如：计算联机费用.......等。
RETURN 结束在目前规则炼中的过滤程序，返回主规则炼继续过滤，如果把自订规则炼看成是一个子程序，那么这个动作，就相当于提早结束子程序并返回到主程序中。
MARK 将封包标上某个代号，以便提供作为后续过滤的条件判断依据，进行完此处理动作后，将会继续比对其它规则。范例如下： 
　　iptables -t mangle -A PREROUTING -p tcp --dport 22 -j MARK --set-mark 2

2.查看运行内存的使用情况	free -m
						total       used       free     shared    buffers     cached
	Mem:          		1892        373       1519          0         28        184
-/+ buffers/cache:        160       1731
	Swap:         		2047          0       2047

3.查看物理内存的使用情况    df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda3        57G   23G   32G  43% /
tmpfs           947M  224K  947M   1% /dev/shm
/dev/sda1       194M   32M  153M  18% /boot




	